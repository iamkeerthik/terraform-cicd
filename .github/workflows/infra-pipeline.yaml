name: Terraform CI/CD

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  terragrunt-plan:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        environment: [dev] # Define your environments here
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install AWS CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y awscli

      - name: Set up AWS credentials
        run: |
          mkdir -p ~/.aws
          echo "[default]" > ~/.aws/credentials
          echo "aws_access_key_id=${{ secrets.AWS_ACCESS_KEY_ID }}" >> ~/.aws/credentials
          echo "aws_secret_access_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> ~/.aws/credentials

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.0.0

      - name: Install Terragrunt
        run: |
          wget https://github.com/gruntwork-io/terragrunt/releases/download/v0.37.0/terragrunt_linux_amd64
          sudo mv terragrunt_linux_amd64 /usr/local/bin/terragrunt
          sudo chmod +x /usr/local/bin/terragrunt

      - name: Install Infracost
        run: |
          curl -sSL https://raw.githubusercontent.com/infracost/infracost/master/scripts/install.sh | bash

      - name: Terraform Init
        run: terragrunt init
        working-directory: environment/${{ matrix.environment }}

      - name: Terraform Plan
        id: plan
        run: terragrunt plan -out=tfplan
        working-directory: environment/${{ matrix.environment }}

      - name: Generate cost estimate
        env:
          INFRACOST_API_KEY: ${{ secrets.INFRACOST_API_KEY }} # Set the API key here
        run: |
          infracost breakdown --path=environment/${{ matrix.environment }}/tfplan --format=json > infracost-output.json
          # Extract the total monthly cost and save it to an environment variable
          echo "COST=$(jq -r '.totalMonthlyCost' infracost-output.json)" >> $GITHUB_ENV

      - name: Create combined comment
        id: create_comment
        run: |
          echo "## Terraform Plan Output" > comment.md
          terragrunt show -no-color tfplan >> comment.md  
          echo "\n## Cloud Cost Estimate" >> comment.md
          echo "- Estimated monthly cost: $COST" >> comment.md
          # Safely export multi-line comment
          echo "comment<<EOF" >> $GITHUB_ENV
          cat comment.md >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
        working-directory: environment/${{ matrix.environment }}

      - name: Create PR Comment
        uses: KeisukeYamashita/create-comment@v1
        with:
          token: ${{ secrets.TERRAFORM_GITHUB_TOKEN }}  # GitHub token to authenticate
          number: ${{ github.event.pull_request.number }}  # The PR number
          comment: ${{ env.comment }}  # The comment content from the previous step
          
  terragrunt-apply:
    runs-on: ubuntu-latest
    needs: terragrunt-plan
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    strategy:
      matrix:
        environment: [dev] # Define your environments here
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install AWS CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y awscli

      - name: Set up AWS credentials
        run: |
          mkdir -p ~/.aws
          echo "[default]" > ~/.aws/credentials
          echo "aws_access_key_id=${{ secrets.AWS_ACCESS_KEY_ID }}" >> ~/.aws/credentials
          echo "aws_secret_access_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> ~/.aws/credentials

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.0.0

      - name: Install Terragrunt
        run: |
          wget https://github.com/gruntwork-io/terragrunt/releases/download/v0.37.0/terragrunt_linux_amd64
          sudo mv terragrunt_linux_amd64 /usr/local/bin/terragrunt
          sudo chmod +x /usr/local/bin/terragrunt

      - name: Terraform Init
        run: terragrunt init
        working-directory: environment/${{ matrix.environment }}

      - name: Terraform Apply
        run: terragrunt apply -auto-approve
        working-directory: environment/${{ matrix.environment }}